<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>analytics-core</artifactId>
	<name>analytics-core</name>

	<parent>
		<groupId>org.sunbird</groupId>
		<artifactId>sunbird-analytics-core</artifactId>
		<version>2.0</version>
	</parent>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scoverage.plugin.version>1.1.1</scoverage.plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>in-project</id>
			<name>In Project Repo</name>
			<url>file://${project.basedir}/lib</url>
		</repository>
<!--		<repository>-->
<!--			<id>ing-bank</id>-->
<!--			<name>Ing-bank Repo</name>-->
<!--			<url>https://dl.bintray.com/ing-bank/maven-releases/</url>-->
<!--		</repository>-->
		<repository>
			<id>jcenter-repo</id>
			<name>Jcenter Repo</name>
			<url>https://jcenter.bintray.com/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.maj.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>jets3t</artifactId>
					<groupId>net.java.dev.jets3t</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.maj.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${scala.maj.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka_${scala.maj.version}</artifactId>
			<version>1.6.2</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.kafka</groupId>
		    			<artifactId>kafka_2.11</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.paranamer</groupId>
			<artifactId>paranamer</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.maj.version}</artifactId>
			<version>3.0.5</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.scalamock/scalamock -->
		<dependency>
			<groupId>org.scalamock</groupId>
			<artifactId>scalamock_${scala.maj.version}</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>2.7.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>2.7.3</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.avro</groupId>
					<artifactId>avro</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-aws</artifactId>
			<version>2.7.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.7.8</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jets3t</groupId>
			<artifactId>jets3t</artifactId>
			<version>0.9.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.neo4j.driver</groupId>
			<artifactId>neo4j-java-driver</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.netty</groupId>
			<artifactId>netty-http-pipelining</artifactId>
			<version>1.1.4</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka_2.11 -->
		<dependency>
		    <groupId>org.apache.kafka</groupId>
		    <artifactId>kafka_${scala.maj.version}</artifactId>
		    <version>1.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j</artifactId>
			<version>3.0.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.neo4j</groupId>
		    <artifactId>neo4j-bolt</artifactId>
		    <version>3.0.8</version>
		    <scope>test</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.sunbird</groupId>
			<artifactId>sunbird-cloud-store-sdk</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency> -->
		<!-- https://mvnrepository.com/artifact/org.sunbird/cloud-store-sdk -->
		<dependency>
			<groupId>org.sunbird</groupId>
			<artifactId>cloud-store-sdk</artifactId>
			<version>1.2.6</version>
			<exclusions>
				<exclusion>
					<groupId>com.microsoft.azure</groupId>
					<artifactId>azure-storage</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.microsoft.azure</groupId>
			<artifactId>azure-storage</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.7.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.typesafe.scala-logging/scala-logging -->
		<dependency>
			<groupId>com.typesafe.scala-logging</groupId>
			<artifactId>scala-logging_2.11</artifactId>
			<version>3.6.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/ing.wbaa.druid/scruid -->
		<dependency>
			<groupId>ing.wbaa.druid</groupId>
			<artifactId>scruid_${scala.maj.version}</artifactId>
			<version>2.4.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/scruid_2.11-2.4.0.jar</systemPath>
		</dependency>
		             <!-- Scruid dependency starts -->
		<!-- https://mvnrepository.com/artifact/io.circe/circe-core -->
		<dependency>
			<groupId>io.circe</groupId>
			<artifactId>circe-core_2.11</artifactId>
			<version>0.11.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.circe/circe-parser -->
		<dependency>
			<groupId>io.circe</groupId>
			<artifactId>circe-parser_2.11</artifactId>
			<version>0.11.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.circe/circe-generic -->
		<dependency>
			<groupId>io.circe</groupId>
			<artifactId>circe-generic_2.11</artifactId>
			<version>0.11.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mdedetrich/akka-stream-json -->
		<dependency>
			<groupId>org.mdedetrich</groupId>
			<artifactId>akka-stream-json_2.11</artifactId>
			<version>0.4.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mdedetrich/akka-http-json -->
		<dependency>
			<groupId>org.mdedetrich</groupId>
			<artifactId>akka-http-json_2.11</artifactId>
			<version>0.4.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mdedetrich/akka-stream-circe -->
		<dependency>
			<groupId>org.mdedetrich</groupId>
			<artifactId>akka-stream-circe_2.11</artifactId>
			<version>0.4.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mdedetrich/akka-http-circe -->
		<dependency>
			<groupId>org.mdedetrich</groupId>
			<artifactId>akka-http-circe_2.11</artifactId>
			<version>0.4.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-http -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http_2.11</artifactId>
			<version>10.1.9</version>
		</dependency>
		<dependency>
			<groupId>io.circe</groupId>
			<artifactId>circe-java8_2.11</artifactId>
			<version>0.11.1</version>
		</dependency>
		<!-- Scruid dependency ends -->
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch-hadoop</artifactId>
			<version>6.7.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.manub/scalatest-embedded-kafka -->
		<dependency>
		    <groupId>net.manub</groupId>
		    <artifactId>scalatest-embedded-kafka_${scala.maj.version}</artifactId>
		    <version>1.1.0</version>
		    <scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		<dependency>
			<groupId>io.zonky.test</groupId>
			<artifactId>embedded-postgres</artifactId>
			<version>1.2.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
			<sourceDirectory>src/main/scala</sourceDirectory>
			<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<source>8</source>
							<target>8</target>
							<args>
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<aggregate>true</aggregate>
					<highlighting>true</highlighting>
					<excludedPackages>.*streaming.*</excludedPackages>
					<excludedFiles>.*KafkaStreamFetcher.*;.*JobRunner.*;.*AppDBUtils.*</excludedFiles>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
